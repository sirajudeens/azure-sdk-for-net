// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Compute.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// This defines extension configuration schemas.
    /// </summary>
    public partial class ExtensionConfiguration
    {
        /// <summary>
        /// Initializes a new instance of the ExtensionConfiguration class.
        /// </summary>
        public ExtensionConfiguration()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ExtensionConfiguration class.
        /// </summary>
        /// <param name="isJsonExtension">Flag indicating if this is a json
        /// extension or not.</param>
        /// <param name="publicConfigurationSchema">Public configuration schema
        /// in xml format.</param>
        /// <param name="privateConfigurationSchema">Private configuration
        /// schema in xml format.</param>
        /// <param name="sampleConfig">Sample configuration schema in xml
        /// format.</param>
        public ExtensionConfiguration(bool? isJsonExtension = default(bool?), string publicConfigurationSchema = default(string), string privateConfigurationSchema = default(string), string sampleConfig = default(string))
        {
            IsJsonExtension = isJsonExtension;
            PublicConfigurationSchema = publicConfigurationSchema;
            PrivateConfigurationSchema = privateConfigurationSchema;
            SampleConfig = sampleConfig;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets flag indicating if this is a json extension or not.
        /// </summary>
        [JsonProperty(PropertyName = "isJsonExtension")]
        public bool? IsJsonExtension { get; set; }

        /// <summary>
        /// Gets or sets public configuration schema in xml format.
        /// </summary>
        [JsonProperty(PropertyName = "publicConfigurationSchema")]
        public string PublicConfigurationSchema { get; set; }

        /// <summary>
        /// Gets or sets private configuration schema in xml format.
        /// </summary>
        [JsonProperty(PropertyName = "privateConfigurationSchema")]
        public string PrivateConfigurationSchema { get; set; }

        /// <summary>
        /// Gets or sets sample configuration schema in xml format.
        /// </summary>
        [JsonProperty(PropertyName = "sampleConfig")]
        public string SampleConfig { get; set; }

    }
}
