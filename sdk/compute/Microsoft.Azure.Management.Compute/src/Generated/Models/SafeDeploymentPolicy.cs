// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Compute.Models
{
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;
    using System.Runtime;
    using System.Runtime.Serialization;

    /// <summary>
    /// Defines values for SafeDeploymentPolicy.
    /// </summary>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum SafeDeploymentPolicy
    {
        [EnumMember(Value = "Standard")]
        Standard,
        [EnumMember(Value = "Hotfix")]
        Hotfix,
        [EnumMember(Value = "Minimal")]
        Minimal
    }
    internal static class SafeDeploymentPolicyEnumExtension
    {
        internal static string ToSerializedValue(this SafeDeploymentPolicy? value)
        {
            return value == null ? null : ((SafeDeploymentPolicy)value).ToSerializedValue();
        }

        internal static string ToSerializedValue(this SafeDeploymentPolicy value)
        {
            switch( value )
            {
                case SafeDeploymentPolicy.Standard:
                    return "Standard";
                case SafeDeploymentPolicy.Hotfix:
                    return "Hotfix";
                case SafeDeploymentPolicy.Minimal:
                    return "Minimal";
            }
            return null;
        }

        internal static SafeDeploymentPolicy? ParseSafeDeploymentPolicy(this string value)
        {
            switch( value )
            {
                case "Standard":
                    return SafeDeploymentPolicy.Standard;
                case "Hotfix":
                    return SafeDeploymentPolicy.Hotfix;
                case "Minimal":
                    return SafeDeploymentPolicy.Minimal;
            }
            return null;
        }
    }
}
